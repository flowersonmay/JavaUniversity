
using System.Diagnostics;

var t5 = new SUMTask(5);
t5.Test();

var t100 = new SUMTask(100);
t100.Test();

var t500 = new SUMTask(500);
t500.Test();

var t1000 = new SUMTask(1000);
t1000.Test();


class Matrix
{
    public Matrix(int s)
    {
        size = s;
        matrix = new float[s, s];
    }

    public void Random()
    {
        var r = new Random();
        for (int i = 0; i < size; i++)
        {
            for (int j = 0; j < size; j++)
            {
                matrix[i, j] = r.Next() % 10;
            }
        }
    }

    public void Print()
    {
        for (int i = 0; i < size; i++)
        {
            for (int j = 0; j < size; j++)
            {
                Console.Write(matrix[i, j] + " ");
            }
            Console.WriteLine();
        }
    }
    public int size;
    public float[,] matrix;
}

class SUMTask
{
    public SUMTask(int s)
    {
        m1 = new Matrix(s);
        m2 = new Matrix(s);
        result = new Matrix(s);

        m1.Random();
        m2.Random();
    }

    private void summator(object row)
    {
        int r = (int)row;
        for (int i = 0; i < m1.size; i++)
        {
            for (int j = 0; j < m1.size; j++)
            {
                result.matrix[r, i] += m1.matrix[r, j] * m2.matrix[j, i];
            }
        }
    }

    public void aMult()
    {
        Task[] tasks = new Task[result.size];
        Stopwatch stopwatch = new Stopwatch();
        stopwatch.Start();
        for (int i = 0; i < result.size; i++)
        {
            tasks[i] = new Task(summator, i);
            tasks[i].Start();
        }
        Task.WaitAll(tasks);
        Console.WriteLine("Async for " + result.size + " items: " + stopwatch.ElapsedMilliseconds);
    }

    public void Mult()
    {
        Stopwatch stopwatch = new Stopwatch();
        stopwatch.Start();
        for (int i = 0; i < result.size; i++)
        {
            summator(i);
        }
        Console.WriteLine("Sync for " + result.size + " items: " + stopwatch.ElapsedMilliseconds);
    }

    public void Test()
    {
        Console.WriteLine();
        Console.WriteLine("------------------------" + result.size + "------------------------");
        Mult();
        aMult();
        if (result.size <= 5)
        {
            m1.Print();
            Console.WriteLine();
            m2.Print();
            Console.WriteLine();
            result.Print();
        }
        Console.WriteLine("------------------------" + result.size + "------------------------");
        Console.WriteLine();
    }

    public Matrix m1;
    public Matrix m2;
    public Matrix result;
}

